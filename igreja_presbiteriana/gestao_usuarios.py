# Form implementation generated from reading ui file 'gestao_usuarios.ui'
#
# Created by: PyQt6 UI code generator 6.9.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from cadastrar_usuario import Ui_CriarUsuario
from editar_usuario import Ui_editar_usuario
from conect_banco import mostrar_usuarios,desativar_ativar_usuario,autenticar_usuario


class ui_gestao_usaurios(QtWidgets.QWidget):
    def __init__(self,usuario,parent=None):
        super().__init__()
        self.usuario=usuario
        self.id_usuario=usuario['id']
        self.nome_usuario=usuario['nome']
        self.senha=usuario['senha']
        try:
            retorno=autenticar_usuario(self.nome_usuario,self.senha)
            if retorno[0]:
                self.setupUi(self)
            else:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
                msg.setText("Erro de autenticação")
                msg.setWindowTitle("Erro")
                msg.exec()
        except Exception as e:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
                msg.setText("Erro em executar a tela de inicio")
                msg.setWindowTitle("Erro")
                msg.exec()
                print("O erro e :",e)
        
    def setupUi(self, Widget):
        Widget.setObjectName("gestao_usuarios")
        Widget.resize(623, 456)

        # Layout principal
        self.layout_principal = QtWidgets.QVBoxLayout(Widget)
        self.layout_principal.setContentsMargins(0, 0, 0, 0)
        self.layout_principal.setObjectName("layout_principal")

        # Título
        self.label = QtWidgets.QLabel(parent=Widget)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.layout_principal.addWidget(self.label)

        # Layout horizontal principal
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")

        # Lado esquerdo (tabela)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")

        # Título da tabela
        self.label_3 = QtWidgets.QLabel(parent=Widget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_8.addWidget(self.label_3)

        # Tabela de usuários
        self.tableWidget = QtWidgets.QTableWidget(parent=Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
        self.tableWidget.setSizePolicy(sizePolicy)
        self.tableWidget.setObjectName("tabela_usuario")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        self.tableWidget.setHorizontalHeaderLabels(["ID","NOME", "TIPO DE USUARIO", "DATA DE CRIAÇÃO", "ATIVO"])
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.verticalLayout_8.addWidget(self.tableWidget)

        # Adiciona o lado esquerdo no layout principal
        self.horizontalLayout_7.addLayout(self.verticalLayout_8)

        # Lado direito (botões)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")

        spacerItemTop = QtWidgets.QSpacerItem(20, 25, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        self.verticalLayout.addItem(spacerItemTop)

        self.pushButton = QtWidgets.QPushButton(parent=Widget)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)

        self.pushButton_3 = QtWidgets.QPushButton(parent=Widget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)

        self.pushButton_4 = QtWidgets.QPushButton(parent=Widget)
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout.addWidget(self.pushButton_4)

        spacerItemBottom = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItemBottom)

        self.horizontalLayout_7.addLayout(self.verticalLayout)
        self.layout_principal.addLayout(self.horizontalLayout_7)

        self.retranslateUi(Widget)
        QtCore.QMetaObject.connectSlotsByName(Widget)

    def retranslateUi(self, Widget):
        _translate = QtCore.QCoreApplication.translate
        Widget.setWindowTitle(_translate("Widget", "Gestão de Usuários"))
        self.label.setText(_translate("Widget", "Gestão de Usuários"))
        self.label_3.setText(_translate("Widget", "USUÁRIOS"))
        self.pushButton.setText(_translate("Widget", "CRIAR USUÁRIO"))
        self.pushButton_3.setText(_translate("Widget", "EDITAR USUÁRIO"))
        self.pushButton_4.setText(_translate("Widget", "DESATIVAR USUÁRIO"))
        self.tableWidget.setSortingEnabled(True)
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)  # Torna a tabela somente leitura
        self.tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.pushButton.clicked.connect(self.criar_usuario)
        self.pushButton_3.clicked.connect(self.editar_usuario)
        self.pushButton_4.clicked.connect(self.desativar_usuario)
        self.atualizar_tabela()
        self.tableWidget.setColumnHidden(0,True)
        self.tableWidget.cellClicked.connect(self.celular_clicada)
    def celular_clicada(self, row, column):
        print(f"Célula clicada na linha {row}, coluna {column}")
        texto_ativo=self.tableWidget.item(row, 4).text()
        print(texto_ativo)
        if texto_ativo == "sim" :
            self.pushButton_4.setText("DESATIVAR USUÁRIO")
        else:
            self.pushButton_4.setText("ATIVAR USUÁRIO")
            
        
    def criar_usuario(self):
        self.cadastrar_usuario_ui = Ui_CriarUsuario(parent=self)
        self.cadastrar_usuario_ui.show()
    def editar_usuario(self):
        linha_clicada=self.tableWidget.currentRow()
        usuarios = list(mostrar_usuarios().keys())       
        id_clicado=usuarios[linha_clicada]
        if id_clicado:
            usuario_dados=mostrar_usuarios()[id_clicado]
            self.editar_usuario_ui = Ui_editar_usuario(usuario=usuario_dados)
            self.editar_usuario_ui.show()
        else:
            msg=QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            msg.setText("Por favor, selecione um usuário para editar.")
            msg.setWindowTitle("Nenhum Usuário Selecionado")
            msg.setStandardButtons(QtWidgets.QMessageBox.StandardButton.Ok)
            msg.exec()
            

    def desativar_usuario(self):
        linha_clicada=self.tableWidget.currentRow()
        usuarios = list(mostrar_usuarios().keys())       
        id_clicado=usuarios[linha_clicada]
        nome_clicado=self.tableWidget.item(linha_clicada,1).text()
        ativo_clicado=self.tableWidget.item(linha_clicada,4).text()
        if id_clicado:
            if ativo_clicado == "sim":
                novo_status=False
                acao="desativar"
            else:
                novo_status=True
                acao="ativar"
            confirm = QtWidgets.QMessageBox.question(
                self,
                "Confirmar Ação",
                f"Tem certeza que deseja {acao} o usuário '{nome_clicado}'?",
                QtWidgets.QMessageBox.StandardButton.Yes | QtWidgets.QMessageBox.StandardButton.No
            )
            if confirm == QtWidgets.QMessageBox.StandardButton.Yes:
                desativar_ativar_usuario(id_usuario=id_clicado,nome_usuario=nome_clicado,ativo=novo_status)
                self.atualizar_tabela()
        else:
            msg=QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            msg.setText("Por favor, selecione um usuário para desativar/ativar.")
            msg.setWindowTitle("Nenhum Usuário Selecionado")
            msg.setStandardButtons(QtWidgets.QMessageBox.StandardButton.Ok)
            msg.exec()
    def atualizar_tabela(self):
        self.tableWidget.setRowCount(0)  # Limpa a tabela antes de atualizar
        usuarios = mostrar_usuarios()    # Retorno é um dicionário
        print(usuarios)                  # Para debug

        for usuario_id, usuario_data in usuarios.items():
            rowPosition = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowPosition)
            print(usuario_data)
            
            # Preenche a tabela com os campos que você quer mostrar
            self.tableWidget.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(str(usuario_data['id'])))
            self.tableWidget.setItem(rowPosition, 1, QtWidgets.QTableWidgetItem(usuario_data['nome']))
            self.tableWidget.setItem(rowPosition, 2, QtWidgets.QTableWidgetItem(usuario_data['tipo_usuario']))
            self.tableWidget.setItem(rowPosition, 3, QtWidgets.QTableWidgetItem(usuario_data['data_entrada']))
            self.tableWidget.setItem(rowPosition, 4, QtWidgets.QTableWidgetItem(usuario_data['ativo']))

        self.tableWidget.resizeColumnsToContents()
        


